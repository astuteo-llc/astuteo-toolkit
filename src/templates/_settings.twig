{% import "_includes/forms" as forms %}

<h2>General Settings</h2>

{{ forms.lightswitchField({
    label: "Load CP Tweaks"|t('astuteo-toolkit'),
    instructions: "Enable Control Panel tweaks"|t('astuteo-toolkit'),
    id: 'loadCpTweaks',
    name: 'loadCpTweaks',
    on: settings.loadCpTweaks,
    errors: settings.getErrors('loadCpTweaks')
}) }}

{{ forms.lightswitchField({
    label: "Dev CP Nav"|t('astuteo-toolkit'),
    instructions: "Enable developer Control Panel navigation items"|t('astuteo-toolkit'),
    id: 'devCpNav',
    name: 'devCpNav',
    on: settings.devCpNav,
    errors: settings.getErrors('devCpNav')
}) }}

{{ forms.lightswitchField({
    label: "Include Frontend Edit"|t('astuteo-toolkit'),
    instructions: "Enable frontend edit links for entries"|t('astuteo-toolkit'),
    id: 'includeFeEdit',
    name: 'includeFeEdit',
    on: settings.includeFeEdit,
    errors: settings.getErrors('includeFeEdit')
}) }}

<h2>Asset Settings</h2>

{{ forms.textField({
    label: "Asset Path"|t('astuteo-toolkit'),
    instructions: "Path to site assets"|t('astuteo-toolkit'),
    id: 'assetPath',
    name: 'assetPath',
    value: settings.assetPath,
    errors: settings.getErrors('assetPath')
}) }}

{{ forms.lightswitchField({
    label: "Cache Bust Dev"|t('astuteo-toolkit'),
    instructions: "Enable cache busting in development mode"|t('astuteo-toolkit'),
    id: 'cacheBustDev',
    name: 'cacheBustDev',
    on: settings.cacheBustDev,
    errors: settings.getErrors('cacheBustDev')
}) }}

<h2>Video Settings</h2>

{{ forms.lightswitchField({
    label: "Cache Video Embeds"|t('astuteo-toolkit'),
    instructions: "Enable caching for video embeds"|t('astuteo-toolkit'),
    id: 'cacheVideoEmbeds',
    name: 'cacheVideoEmbeds',
    on: settings.cacheVideoEmbeds,
    errors: settings.getErrors('cacheVideoEmbeds')
}) }}

<h2>IP Lookup Settings</h2>

{{ forms.selectField({
    label: "IP Lookup Provider"|t('astuteo-toolkit'),
    instructions: "Select the IP lookup provider to use"|t('astuteo-toolkit'),
    id: 'ipLookupProvider',
    name: 'ipLookupProvider',
    options: [
        { value: 'ipwhois', label: 'IP Whois' },
        { value: 'ipinfo', label: 'IP Info' }
    ],
    value: settings.ipLookupProvider,
    errors: settings.getErrors('ipLookupProvider'),
    suggestEnvVars: true
}) }}

{{ forms.autosuggestField({
    label: "IP Lookup Token"|t('astuteo-toolkit'),
    instructions: "API token for IP lookup services"|t('astuteo-toolkit'),
    id: 'ipLookupToken',
    name: 'ipLookupToken',
    value: settings.ipLookupToken,
    errors: settings.getErrors('ipLookupToken'),
    suggestEnvVars: true,
    placeholder: '$IP_LOOKUP_TOKEN'
}) }}

{# Optional: Show parsed values for debugging #}
{% if craft.app.config.general.devMode %}


    <div class="field">
        <div class="heading">
            <label>{{ "Parsed Values (Dev Mode Only)"|t('astuteo-toolkit') }}</label>
        </div>
        <div class="input">
            <p><strong>Provider:</strong> {{ settings.parsedIpLookupProvider }}</p>
            <p><strong>Token:</strong> {{ settings.parsedIpLookupToken ? '***' : '(empty)' }}</p>
        </div>
    </div>

    <div class="field">
        <div class="heading">
            <label>{{ "IP Lookup Test (Dev Mode Only)"|t('astuteo-toolkit') }}</label>
        </div>
        <div class="input">
            <p>{{ "Testing IP lookup functionality by loading example case:"|t('astuteo-toolkit') }} <a href="{{ siteUrl('astuteo-toolkit/info') }}" target="_blank">{{ siteUrl('astuteo-toolkit/info') }}</a></p>
            <div id="ip-lookup-result" style="margin-top: 10px; padding: 10px; background: #f5f5f5; border-radius: 3px;">
                <p>{{ "Loading IP lookup data..."|t('astuteo-toolkit') }}</p>
            </div>
        </div>
    </div>

    <script type="text/javascript">
        document.addEventListener('DOMContentLoaded', function() {
            fetch('{{ siteUrl('astuteo-toolkit/info') }}')
                .then(response => response.json())
                .then(data => {
                    const resultElement = document.getElementById('ip-lookup-result');
                    if (data) {
                        let html = '<h3>{{ "IP Lookup Result"|t('astuteo-toolkit') }}</h3>';
                        html += '<pre style="max-height: 300px; overflow: auto;">' + JSON.stringify(data, null, 2) + '</pre>';
                        resultElement.innerHTML = html;
                    } else {
                        resultElement.innerHTML = '<p>{{ "No data returned from IP lookup"|t('astuteo-toolkit') }}</p>';
                    }
                })
                .catch(error => {
                    const resultElement = document.getElementById('ip-lookup-result');
                    resultElement.innerHTML = '<p>{{ "Error loading IP lookup data:"|t('astuteo-toolkit') }} ' + error.message + '</p>';
                });
        });
    </script>
{% endif %}
